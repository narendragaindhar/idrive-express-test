name: Tests

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

jobs:
  rspec:
    runs-on: ubuntu-22.04

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: express_test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_RANDOM_ROOT_PASSWORD: root
        ports:
          - 3306/tcp
        options: >-
          --name=mysql-master
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      redis:
        image: redis
        ports:
          - 6379/tcp
    env:
      IBACKUP_UPDATE_API_TOKEN: ${{ secrets.IBACKUP_UPDATE_API_TOKEN_TEST }}
      IBACKUP_UPDATE_URL: 'https://www.ibackup.com/ibackup/static/updateOrderStatus'
      IDRIVE_UPDATE_API_TOKEN: ${{ secrets.IDRIVE_UPDATE_API_TOKEN_TEST }}
      IDRIVE_UPDATE_URL: 'https://www.idrive.com/idrive/static/updateOrderStatus'
      IDRIVE360_UPDATE_API_TOKEN: ${{ secrets.IDRIVE360_UPDATE_API_TOKEN_TEST }}
      IDRIVE360_UPDATE_URL: 'https://www.idrive.com/idrive/static/updateOrderStatus'
      REDIS_URL: 'redis://localhost:6379'
      RAILS_ENV: test
      DATABASE_URL_TEST: 'mysql2://root:root@localhost:3306/express_test'
      DATABASE_READONLY_URL_TEST: 'mysql2://root:root@localhost:3306/express_test'
      API_TOKEN: ${{ secrets.API_TOKEN_TEST }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Database setup
        run: |
          sudo service mysql restart
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rails db:seed

      - name: Run RSpec tests
        run: bundle exec rspec
      - name: Run RuboCop
        run: bundle exec rubocop

      - name: Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "Status: ${{ job.status }}\nStarted by: ${{ github.actor }}\nLink: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            }
